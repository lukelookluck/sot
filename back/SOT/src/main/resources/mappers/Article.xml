<?xml version="1.0" encoding="UTF-8"?>
<!-- mappers/Article.xml -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="article">
	<!-- **************** limit 두는 시리즈 **************** -->
	<!-- (LIMIT) 특정 학교의 전체 게시글 불러오기 -->
	<select id="selectArticlesBySchoolIdWithLimit" parameterType="IdWithIndexDTO" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where board_id in (select id from board where school_id = #{id})
		order by id desc
		limit #{startIdx}, #{amount}
	</select>
	
	<!-- (LIMIT) 특정 학교의 베스트 게시글 불러오기 (최신글 순) -->
	<select id="selectBestArticlesBySchoolIdWithLimit" parameterType="IdWithIndexDTO" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where board_id in (select id from board where school_id = #{id})
		and (select count(id) from articlelike where articlelike.article_id = article.id) > 2
		order by id desc
		limit #{startIdx}, #{amount}
	</select>
	
	<!-- (LIMIT) 특정 게시판의 전체 글 불러오기(최신글 순) -->
	<select id="selectArticlesByBoardIdWithLimit" parameterType="idWithIndexDTO" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where board_id = #{id}
		order by id desc
		limit #{startIdx}, #{amount}
	</select>
	
	<!-- (LIMIT) 특정 게시판의 베스트 글 불러오기(최신글 순) -->
	<select id="selectBestArticlesByBoardIdWithLimit" parameterType="idWithIndexDTO" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where board_id = #{id}
		and (select count(id) from articlelike where articlelike.article_id = article.id) > 2
		order by id desc
		limit #{startIdx}, #{amount}
	</select>
	
	<!-- (Limit) -->
	<select id="selectMyArticlesWithLimit" parameterType="idWithIndexDTO" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where article.id in (select article.id from article where article.user_id = #{id})
		order by id desc
		limit #{startIdx}, #{amount}
	</select>
	
	<!-- (Limit) -->
	<select id="selectLikedArticlesWithLimit" parameterType="idWithIndexDTO" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where article.id in (select articlelike.article_id from articlelike where articlelike.user_id = #{id})
		order by id desc
		limit #{startIdx}, #{amount}
	</select>
	
	<!-- *************** **************** -->

	<!-- 전체 게시글에서 제목으로 검색 -->
	<select id="searchTitle" resultType="ArticleFullInfo" parameterType="SearchDTO">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where article.title like #{keyword}
		and board_id in (select id from board where school_id = #{id})
		order by id desc
	</select>
	
	<!-- 전체 게시글에서 제목과 내용으로 검색 -->
	<select id="searchTitleOrContent" resultType="ArticleFullInfo" parameterType="SearchDTO">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where board_id in (select id from board where school_id = #{id})
		and (article.title like #{keyword}
			or article.content like #{keyword})
		order by id desc
	</select>

	<!-- 특정 학교의 전체 게시글 불러오기 (최신글 순) -->
	<select id="selectArticlesBySchoolId" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where board_id in (select id from board where school_id = #{schoolId})
		order by id desc
	</select>
	
	<!-- 특정 학교의 베스트 게시글 불러오기 (최신글 순) -->
	<select id="selectBestArticlesBySchoolId" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where board_id in (select id from board where school_id = #{schoolId})
		and (select count(id) from articlelike where articlelike.article_id = article.id) > 2
		order by id desc
	</select>

	<!-- 특정 게시판의 전체 글 불러오기(최신글 순) -->
	<select id="selectArticlesByBoardId" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where board_id = #{boardId}
		order by id desc
	</select>
	
	<!-- 특정 게시판의 베스트 글 불러오기(최신글 순) -->
	<select id="selectBestArticlesByBoardId" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where board_id = #{boardId}
		and (select count(id) from articlelike where articlelike.article_id = article.id) > 2
		order by id desc
	</select>
	
	<select id="selectArticleById" resultType="ArticleDTO">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		where article.id = #{id}
	</select>
	
	<insert id="insertArticle" parameterType="ArticleDTO">
		insert into article(title, content, board_id, user_id)
		values(#{title},
				#{content},
				#{boardId},
				#{userId}
			)
	</insert>
	
	<update id="updateArticle" parameterType="ArticleDTO">
		update article
		set title = #{title},
			content = #{content},
			updated_at = now()
		where id = #{id}
	</update>
	
	<delete id="deleteArticle">
		delete from article
		where id = #{id}
	</delete>
	
	<!-- 마이페이지 관련 -->
	<select id="selectMyArticles" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where article.id in (select article.id from article where article.user_id = #{userId})
		order by id desc
	</select>
	
	<select id="selectLikedArticles" resultType="ArticleFullInfo">
		select article.id,
			article.title,
			article.content,
			article.board_id as boardId,
			board.name as boardName,
			article.user_id as userId,
			user.nickname as nickname,
			article.created_at,
			article.updated_at,
			(select count(id) from comment where comment.article_id = article.id) as commentsCnt,
			(select count(id) from articlelike where articlelike.article_id = article.id) as likesCnt
		from article
		join user
		on article.user_id = user.id
		join board
		on article.board_id = board.id
		where article.id in (select articlelike.article_id from articlelike where articlelike.user_id = #{userId})
		order by id desc
	</select>

</mapper>